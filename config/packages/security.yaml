security:
    enable_authenticator_manager: true

    access_decision_manager:
        strategy: unanimous
        allow_if_all_abstain: true

    password_hashers:
        Sulu\Bundle\SecurityBundle\Entity\User: bcrypt

    providers:
        sulu:
            id: sulu_security.user_provider

    access_control:
        - { path: ^/admin/reset, roles: PUBLIC_ACCESS }
        - { path: ^/admin/security/reset, roles: PUBLIC_ACCESS }
        - { path: ^/admin/login$, roles: PUBLIC_ACCESS }
        - { path: ^/admin/_wdt, roles: PUBLIC_ACCESS }
        - { path: ^/admin/translations, roles: PUBLIC_ACCESS }
        - { path: ^/admin$, roles: PUBLIC_ACCESS }
        - { path: ^/admin/$, roles: PUBLIC_ACCESS }
        - { path: ^/admin/p/, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_USER }

        - { path: ^/presse/login, roles: PUBLIC_ACCESS }
        - { path: ^/presse, roles: ROLE_SULU_PRESS }
        - { path: ^/en/press/login, roles: PUBLIC_ACCESS }
        - { path: ^/en/press, roles: ROLE_SULU_PRESS }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/admin(\/|$)
            lazy: true
            provider: sulu
            entry_point: sulu_security.authentication_entry_point
            json_login:
                check_path: sulu_admin.login_check
                success_handler: sulu_security.authentication_handler
                failure_handler: sulu_security.authentication_handler
            logout:
                path: sulu_admin.logout
                success_handler: sulu_security.logout_success_handler
        # mainsite: 
        #     pattern:  ^/presse(\/|$)
        #     provider: sulu
        #     # anonymous: true
        #     lazy: true
        #     form_login:
        #         login_path: sulu_community.login
        #         check_path: sulu_community.login
        #     logout:
        #         path: sulu_community.logout
        #         target: /presse
        #     remember_me:
        #         secret:   "%kernel.secret%"
        #         lifetime: 604800 # 1 week in seconds
        #         path:     /
        # mainsite_en: 
        #     pattern:  ^/en/press(\/|$)
        #     provider: sulu
        #     # anonymous: true
        #     lazy: true
        #     form_login:
        #         login_path: sulu_community.login_en
        #         check_path: sulu_community.login_en
        #     logout:
        #         path: sulu_community.logout_en
        #         target: /en/press
        #     remember_me:
        #         secret:   "%kernel.secret%"
        #         lifetime: 604800 # 1 week in seconds
        #         path:     /
        #     # activate different ways to authenticate
        #     # https://symfony.com/doc/current/security.html#the-firewall
        #
        #     # https://symfony.com/doc/current/security/impersonating_user.html
        #     # switch_user: true


#        website:
#            pattern: ^/
#            lazy: true
#            provider: sulu
#            # The login and logout routes need to be created.
#            # For an advanced user management with registration and opt-in emails have a look at the:
#            # https://github.com/sulu/SuluCommunityBundle
#            # Also have a look at the user context based caching when you output user role specific data
#            # https://docs.sulu.io/en/2.2/cookbook/user-context-caching.html
#            form_login:
#                login_path: login
#                check_path: login
#            logout:
#                path: logout
#                target: /
#            remember_me:
#                secret:   "%kernel.secret%"
#                lifetime: 604800 # 1 week in seconds
#                path:     /

sulu_security:
    checker:
        enabled: true
